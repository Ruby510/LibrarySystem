Library Management System
Software Requirement Specification
Spring 2024
Version 1.0.0


Project Manager: Charlie Cardenas
Backend Developer: Charlie Cardenas, Conrad Bidrawn, Ngoc Tran
Frontend Developer: Alexis Keck, Ngoc Tran
Quality assurance: Miguel Romero, Charlie Cardenas, Ngoc Tran
Documentation/Technical Writer: Miguel Romero, Conrad Bidrawn






















________________
Table of Contents
1. Introduction:        3
1.1. Purpose        3
1.2. Scope        3
1.3. Definitions, Acronyms, Abbreviations        3
1.4. References        4
2. System Overview:        4
2.1. Product Functions (Use Case Diagram)        4
2.2 User Characteristics        5
2.3 Constraints        6
2.4 Assumptions and Dependencies        6
2.5 Software interfaces        6
3. Specific Requirements        7
3.1. External Interface Requirements        7
3.1.1. User Interfaces        7
3.1.2. Hardware Interfaces        7
3.2. Functional requirements        7
3.2.1. User is Signed Out        7
3.2.1.1. Figure 1: Choose title        7
3.2.1.2. Figure 2: Member Login        7
3.2.1.3. Figure 3: Create Account        7
3.2.1.4. Figure 4: Employee Login        8
3.2.2. Member is Signed In        8
3.2.2.1. Figure 5: Member Homepage        8
3.2.2.2. Figure 6: Searching the catalog of books        8
3.2.2.3 Figure 7: Check-out a book        8
3.2.2.4 Figure 8: Renew a book        8
3.2.2.5 Figure 9: Return a book        9
3.2.3. Employee is signed in        9
3.2.3.1 Figure 10: Employee Homepage        9
3.2.3.2. Figure 11: Searching the catalog of books        9
3.2.3.3. Figure 12: Editing the catalog of books        9
3.2.3.4. Figure 13: Searching the catalog of members        9
3.3. Performance Requirements        10
3.4. Design Constraints        10


1. Introduction:
1.1. Purpose
        This SRS (Software Specification Requirements) document aims to outline the
specific software needs and requirements for the Library Management System(LMS). The aforementioned requirements must be met and tested by the end of our CPSC 362 Software Engineering course in the Spring of 2024.


1.2. Scope
LMS is a software that manages the operations of a library. This software will be able to be used by both employees and library members. It includes features such as lending books, searching for a book, processing returns, renewal of lending, accessing databases, creating accounts and managing members.


1.3. Definitions, Acronyms, Abbreviations
User - a person accessing the application.
Application - a computer program that is given a certain task to be completed for the end-users.
Database - an organized collection of information stored within the computer system.
Visual Studio - a development environment used to develop computer programs such as websites and web services.
C++ - or “C-plus-plus” is a generic programming language for building software. 
Front end - the part of software development involved with designing the user interface.
Back end - the other part of software development involved in creating and maintaining the software's server and database.
Web browser - an application for accessing websites on the internet.
LMS - abbreviation for library management system
1.4. References
Design a Library Management System. (n.d.). Design Gurus. Retrieved February 22, 2024, from https://www.designgurus.io/course-play/grokking-the-object-oriented-design-interview/doc/637bad85a7d2bce8249cea5a






2. System Overview:
2.1. Product Functions (Use Case Diagram)
LMS will allow its users to manage a library’s services through the position of an employee and member. The employee will be able to interact with a database for both books and members. In each database, information regarding the specific topic will be displayed. The information for books would display what books are available and allow employees to add/remove books. The information for members would include any late fees, what books they have checked out. A member would be able to search the catalog of books, as well as check-out, renew, and return a book.
  





2.2 User Characteristics
        Our use case diagram shows that a user of the software will be met with a screen allowing them to choose whether they are an employee or a member. Based on their respective choice the user will be met with a login screen for said choice. If the member option is chosen the user will be met with a member login page. If the user that chose the member option is signed out they either have not logged in, or the user does not have an account registered. If they have created an account but are not logged in they’ll be able to do so with their member id and password. If the user has not created an account, they can click on the register link, then input their member id and password. Once they are signed in, a member will be able to search the catalog of books, as well as check-out, renew, and return a book presented by the member homepage. LMS seeks to facilitate library needs by making every action a regular library does something accessible remotely. On the other hand, if a user were to choose the employee option they would be met with an employee login screen that asks for their employee id. This credential would be provided by their employment. Once logged in they would be able to access employee abilities such as choosing a database to edit/access for either books and members. 


2.3 Constraints
* Time constraints, our group including management sometimes had the
inability to meet or communicate effectively with one another and that impeded with there being steady progress.
* Developing an application in a new environment using a new methodology is
quite strenuous.
* Having to be able to link databases and an application is quite strenuous.


2.4 Assumptions and Dependencies
* Users will have internet access alongside a computer & proper software to access program.
* Assume that the user will have the ability to navigate through the program and our
application smoothly. Able to understand and read English in order to understand
functionalities.


2.5 Software interfaces
* Visual Studio, Visual Studio Code: These were the main softwares used to create the program:
   * a. Front end – Using C++ to write front end
   * b. Back end –  Using C++ to write back end
3. Specific Requirements
3.1. External Interface Requirements
3.1.1. User Interfaces
LMS user interface will consist of graphical elements as well as text within the
web application.
3.1.2. Hardware Interfaces
The user will need common computer peripherals or accessories to interact with
our application such as a monitor, keyboard, mouse or trackpad.
3.2. Functional requirements
  3.2.1. User is Signed Out
3.2.1.1. Figure 1: Choose title
When a user opens the program they will be able to choose between a member and employee option to access the software.
3.2.1.2. Figure 2: Member Login
If a member has not logged in they may do so on the member login page. This
will be what members see first. Allows members to input their member id and password
to login if they’ve already made an account.
3.2.1.3. Figure 3: Create Account
If the member has not created an account they may do so using the “Sign up here” functionality present in Figure 2.
3.2.1.4. Figure 4: Employee Login
If an employee has not logged in they may do so on the employee login page. This will be what employees see first. It allows employees to input their employee id to login.


3.2.2. Member is Signed In
3.2.2.1. Figure 5: Member Homepage
Once members have logged in, or signed up they will be
able to see the member homepage where they may choose if they want to search the catalog of books, as well as check-out, renew, and return a book. If they would like to access the catalog of books or interact with their account they may do so by pressing the respective option button shown in the homepage.
3.2.2.2. Figure 6: Searching the catalog of books
If the member chooses to search the catalog they will be met with a search bar where they will be able to type the name of the book to see if the item is available. Here information about the book will be displayed such as identification number, author name, and availability.
3.2.2.3 Figure 7: Check-out a book
If the member chose the check-out option they will be able to input data about the book such as title, identification number, and author name to check it out if the book is available.
3.2.2.4 Figure 8: Renew a book
If the member chooses to renew a book, the books that they currently have checked out will be displayed and they will be able to choose which one they would like to renew.
3.2.2.5 Figure 9: Return a book
If the member chooses to return a book, they will be able to input into a textbox the book title, identification number, and author name.
3.2.3. Employee is signed in
        3.2.3.1 Figure 10: Employee Homepage
        Once employees have logged in, they will be
able to see the employee homepage where they may choose if they want to search the catalog of books or members, as well as add/remove books in the book database. If they would like to access either catalog of books or members they may do so by pressing the respective option button shown in the homepage.
3.2.3.2. Figure 11: Searching the catalog of books
If the employee chooses to search the catalog they will be met with a search bar where they will be able to type the name of the book. Here information about the book will be displayed such as identification number, author name, and availability.
3.2.3.3. Figure 12: Editing the catalog of books
Once having found what book’s information they want to edit using the search option (Figure 11), an employee will be able to add or remove copies of the book to the database. 
3.2.3.4. Figure 13: Searching the catalog of members
If the employee chooses to search the catalog of members, they will input a member id into a search bar to find information about said member. Here information such as what books they have checked out and any late fees will be displayed.


3.3. Performance Requirements
In order for our users to have the most seamless experience, member information and book information would have to be saved into our databases. This would require a little
playing around with our databases as they would have to grow or shrink every time there is a change in each section. 
3.4. Design Constraints
Users must be able to access the site with the appropriate software needed. If they do not have this software they will not be able to interact with the application.. We also assume that the user is able to input the information required to use the application.